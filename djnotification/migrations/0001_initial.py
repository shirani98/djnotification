# Generated by Django 5.0.1 on 2024-01-17 11:21

import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "code_name",
                    models.CharField(
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Code Name must be a valid Unicode string with length < 100",
                                regex="^[a-zA-Z0-9\\-_\\.]{1,100}$",
                            )
                        ],
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("private", "Private"),
                            ("custom", "Custom"),
                        ],
                        default="public",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.CharField(max_length=255)),
                ("user_notification_id", models.CharField(max_length=255)),
                ("status", models.BooleanField(default=True)),
                ("user_agent", models.CharField(max_length=500)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("left_at", models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                "verbose_name": "Notification User",
                "verbose_name_plural": "Notification Users",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "message_layout",
                    models.CharField(
                        choices=[
                            ("card", "Card"),
                            ("modal", "Modal"),
                            ("image_only", "Image Only"),
                            ("top_banner", "Top Banner"),
                        ],
                        default="card",
                        max_length=15,
                    ),
                ),
                ("user_id", models.CharField(blank=True, max_length=255, null=True)),
                ("message_title", models.CharField(max_length=255)),
                ("body", models.CharField(blank=True, max_length=255, null=True)),
                ("image", models.URLField(blank=True, null=True)),
                ("portrait_image", models.URLField(blank=True, null=True)),
                ("landscape_image", models.URLField(blank=True, null=True)),
                ("extra_data", models.JSONField(blank=True, null=True)),
                ("time_to_send", models.DateTimeField(blank=True, null=True)),
                (
                    "background_color",
                    models.CharField(blank=True, max_length=7, null=True),
                ),
                ("text_color", models.CharField(blank=True, max_length=7, null=True)),
                ("action", models.URLField(blank=True, null=True)),
                (
                    "button_text",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "button_text_color",
                    models.CharField(blank=True, max_length=7, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "expired_at",
                    models.DateTimeField(
                        blank=True,
                        default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999),
                        null=True,
                    ),
                ),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="notification.group",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("subscribe", "Subscribe"),
                            ("unsubscribe", "UnSubscribe"),
                            ("left", "Left"),
                        ],
                        default="subscribe",
                        max_length=15,
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("left_at", models.DateTimeField(auto_now=True)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="notification.group",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="notification.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserReadNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("read_at", models.DateTimeField(auto_now_add=True)),
                (
                    "notification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="notification.notification",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="notification.user",
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "notification")},
            },
        ),
        migrations.AddField(
            model_name="user",
            name="read_notifications",
            field=models.ManyToManyField(
                blank=True,
                null=True,
                through="notification.UserReadNotification",
                to="notification.notification",
            ),
        ),
    ]
